// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace e_drive_api.Migrations
{
    [DbContext(typeof(EdriveDb))]
    partial class EdriveDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("t_company_info", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("address_1")
                        .HasColumnType("text");

                    b.Property<string>("address_2")
                        .HasColumnType("text");

                    b.Property<string>("area_code")
                        .HasColumnType("text");

                    b.Property<string>("bussiness_name")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("create_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("phone_1")
                        .HasColumnType("text");

                    b.Property<string>("phone_2")
                        .HasColumnType("text");

                    b.Property<string>("postal_code")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("update_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("website_url")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("t_company_info", (string)null);
                });

            modelBuilder.Entity("t_employee", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("birth_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("car_insure_carrier")
                        .HasColumnType("text");

                    b.Property<string>("ciy")
                        .HasColumnType("text");

                    b.Property<string>("create_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("driver_licence_expire")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("driver_licence_no")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("employee_note")
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("hired_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("home_phone_no")
                        .HasColumnType("text");

                    b.Property<DateTime?>("insurance_licence_expire")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("insurance_policy_no")
                        .HasColumnType("text");

                    b.Property<string>("insurance_policy_note")
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_enable_clock_break")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mobile_phone_no")
                        .HasColumnType("text");

                    b.Property<int?>("msr_card")
                        .HasColumnType("integer");

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("pay_rate")
                        .HasColumnType("integer");

                    b.Property<int?>("pay_rate_id")
                        .HasColumnType("integer");

                    b.Property<string>("pincode")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("tax_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("terminated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("update_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("zipcode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("t_employee", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
